-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0806
--   at:        2019-05-01 15:41:31 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g
/*29628342-Minh Quang Hoang-mhoa0003-FIT2094*/
spool ./airtnt_schema_output.txt
CREATE SEQUENCE SEQ START WITH 1 INCREMENT BY 1;
DROP SEQUENCE SEQ;


CREATE TABLE activity (
    activity_code          VARCHAR2(12 BYTE) NOT NULL,
    activity_name          VARCHAR2(30 BYTE) NOT NULL,
    activity_description   VARCHAR2(50 BYTE) NOT NULL,
    activity_duration      DATE,
    activity_cost          NUMBER(19,4) NOT NULL
);

ALTER TABLE activity ADD CONSTRAINT chk_activity_cost CHECK ( activity_cost >= 0

);

COMMENT ON COLUMN activity.activity_code IS
    'Activity code as primary key';

COMMENT ON COLUMN activity.activity_name IS
    'Activity name';

COMMENT ON COLUMN activity.activity_description IS
    'Activity description';

COMMENT ON COLUMN activity.activity_duration IS
    'Duration of the activity. The time can vary (eample: a lunch activity may last long or short depends on the customer)'
    ;

COMMENT ON COLUMN activity.activity_cost IS
    'Activity cost up to four digits after the decimal point. This include 0';

ALTER TABLE activity ADD CONSTRAINT activity_pk PRIMARY KEY ( activity_code );

CREATE TABLE activity_special (
    item_quantity   INTEGER,
    activity_code   VARCHAR2(12 BYTE) NOT NULL,
    item_code       VARCHAR2(12 BYTE) NOT NULL
);

COMMENT ON COLUMN activity_special.item_quantity IS
    'Quantity of item needed for the activity';

COMMENT ON COLUMN activity_special.activity_code IS
    'Activity code as primary key';

COMMENT ON COLUMN activity_special.item_code IS
    'Unique item code as primary key';

ALTER TABLE activity_special ADD CONSTRAINT activity_special_pk PRIMARY KEY ( item_code
,
                                                                              activity_code
                                                                              );

CREATE TABLE booking (
    book_time       TIMESTAMP(0) NOT NULL,
    depart_time     TIMESTAMP(0),
    tour_guide_id   VARCHAR2(12 BYTE) NOT NULL,
    customer_id     VARCHAR2(6 CHAR) NOT NULL
);

COMMENT ON COLUMN booking.book_time IS
    'Customers booking time, serves as primary key';

COMMENT ON COLUMN booking.depart_time IS
    'Check out time of the customer';

COMMENT ON COLUMN booking.tour_guide_id IS
    'unique id of tour guide';

COMMENT ON COLUMN booking.customer_id IS
    'Customer unique id, as the primary key';

ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( book_time,
                                                            customer_id );

CREATE TABLE charge (
    charge_rate     NUMBER(10,4),
    charge_time     TIMESTAMP(0) NOT NULL,
    customer_id     VARCHAR2(6 CHAR) NOT NULL,
    activity_code   VARCHAR2(12 BYTE) NOT NULL,
    item_code       VARCHAR2(12 BYTE) NOT NULL
);

ALTER TABLE charge ADD CONSTRAINT chk_charge_rate CHECK ( charge_rate > 0 );

COMMENT ON COLUMN charge.charge_rate IS
    'Activity charge may change depends on date and time of the activity (Holiday may charge extra)'
    ;

COMMENT ON COLUMN charge.charge_time IS
    'Charge time is decided based on activity finish time';

COMMENT ON COLUMN charge.customer_id IS
    'Customer unique id, as the primary key';

COMMENT ON COLUMN charge.activity_code IS
    'Activity code as primary key';

COMMENT ON COLUMN charge.item_code IS
    'Unique item code as primary key';

ALTER TABLE charge ADD CONSTRAINT charge_pk PRIMARY KEY ( customer_id,
                                                          charge_time );

CREATE TABLE cost_centre (
    centre_code          VARCHAR2(12 BYTE) NOT NULL,
    centre_title         VARCHAR2(30 BYTE) NOT NULL,
    centre_admin_fname   VARCHAR2(30 BYTE),
    centre_admin_lname   VARCHAR2(30 BYTE) NOT NULL
);

COMMENT ON COLUMN cost_centre.centre_code IS
    'Cost centre unique code as primary key';

COMMENT ON COLUMN cost_centre.centre_title IS
    'Cost centre title (Example: Business building)';

COMMENT ON COLUMN cost_centre.centre_admin_fname IS
    'First name of cost centres admin';

COMMENT ON COLUMN cost_centre.centre_admin_lname IS
    'Last name of cost centres admin';

ALTER TABLE cost_centre ADD CONSTRAINT cost_centre_pk PRIMARY KEY ( centre_code )
;

CREATE TABLE customer (
    customer_id             VARCHAR2(6 CHAR) NOT NULL,
    customer_passport       VARCHAR2(30 BYTE) NOT NULL,
    customer_address        VARCHAR2(40 BYTE) NOT NULL,
    customer_phone          NUMBER(11),
    customer_dob            DATE NOT NULL,
    customer_bank_account   VARCHAR2(25 BYTE) NOT NULL,
    customer_fname          VARCHAR2(30 BYTE) NOT NULL,
    customer_lname          VARCHAR2(30 BYTE) NOT NULL, 
--  Customer emergency contact
    customer_contact        NUMBER(11)
);

COMMENT ON COLUMN customer.customer_id IS
    'Customer unique id, as the primary key';

COMMENT ON COLUMN customer.customer_passport IS
    'Customer unique identification. Since airtnt is a global organization, the identification should be passport number'
    ;

COMMENT ON COLUMN customer.customer_address IS
    'Address of customer';

COMMENT ON COLUMN customer.customer_phone IS
    'Customer phone number, no character involves';

COMMENT ON COLUMN customer.customer_dob IS
    'Customer date of birth';

COMMENT ON COLUMN customer.customer_bank_account IS
    'Customer bank account as unique payment identification';

COMMENT ON COLUMN customer.customer_fname IS
    'Customer first name';

COMMENT ON COLUMN customer.customer_lname IS
    'Customer last name';

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( customer_id );

CREATE TABLE housekeeper (
    keeper_id      VARCHAR2(12 BYTE) NOT NULL,
    keeper_fname   VARCHAR2(30 BYTE) NOT NULL,
    keeper_lname   VARCHAR2(30 BYTE) NOT NULL
);

COMMENT ON COLUMN housekeeper.keeper_id IS
    'Unique id of the house keepeer';

COMMENT ON COLUMN housekeeper.keeper_fname IS
    'House keeper first name';

COMMENT ON COLUMN housekeeper.keeper_lname IS
    'House keeper last name';

ALTER TABLE housekeeper ADD CONSTRAINT housekeeper_pk PRIMARY KEY ( keeper_id );

CREATE TABLE housekeeper_assignment (
    assign_date       DATE NOT NULL,
    assign_fdate      DATE,
    houseshare_code   VARCHAR2(12 BYTE) NOT NULL,
    keeper_id         VARCHAR2(12 BYTE) NOT NULL
);

COMMENT ON COLUMN housekeeper_assignment.assign_date IS
    'Assign date of the house keeper';

COMMENT ON COLUMN housekeeper_assignment.assign_fdate IS
    'Finish date of the housekeeper';

COMMENT ON COLUMN housekeeper_assignment.houseshare_code IS
    'Unique code of houseshare';

COMMENT ON COLUMN housekeeper_assignment.keeper_id IS
    'Unique id of the house keepeer';

ALTER TABLE housekeeper_assignment ADD CONSTRAINT housekeeper_assignment_pk PRIMARY
KEY ( assign_date,
                                                                                          keeper_id
                                                                                          )
                                                                                          ;

CREATE TABLE houseshare (
    houseshare_code    VARCHAR2(12 BYTE) NOT NULL, 
--  Houseshare name 
    houseshare_name    VARCHAR2(50 BYTE) NOT NULL,
    house_num_rooms    INTEGER NOT NULL,
    house_empty_room   INTEGER NOT NULL
);

ALTER TABLE houseshare ADD CONSTRAINT chk_house_number_rooms CHECK ( house_number_rooms

>= 1 );

ALTER TABLE houseshare ADD CONSTRAINT chk_house_empty_room CHECK ( house_empty_room

>= 0 );

COMMENT ON COLUMN houseshare.houseshare_code IS
    'Unique code of houseshare';

COMMENT ON COLUMN houseshare.houseshare_name IS
    'Unique code of houseshare';

COMMENT ON COLUMN houseshare.house_num_rooms IS
    'Number of room inside the house';

COMMENT ON COLUMN houseshare.house_empty_room IS
    'Number of empty room inside the house, including 0';

ALTER TABLE houseshare ADD CONSTRAINT houseshare_pk PRIMARY KEY ( houseshare_code
);

CREATE TABLE item (
    item_code     VARCHAR2(12 BYTE) NOT NULL,
    item_desc     VARCHAR2(50 BYTE) NOT NULL,
    item_stock    INTEGER NOT NULL,
    item_cost     NUMBER(19,4) NOT NULL,
    centre_code   VARCHAR2(12 BYTE) NOT NULL
);

ALTER TABLE item ADD CONSTRAINT chk_item_stock CHECK ( item_stock >= 0 );

ALTER TABLE item ADD CONSTRAINT chk_item_cost CHECK ( item_cost >= 0 );

COMMENT ON COLUMN item.item_code IS
    'Unique item code as primary key';

COMMENT ON COLUMN item.item_desc IS
    'Description of the item';

COMMENT ON COLUMN item.item_stock IS
    'Stock of item related to supplier';

COMMENT ON COLUMN item.item_cost IS
    'Cost of the item. This include 0';

COMMENT ON COLUMN item.centre_code IS
    'Cost centre unique code as primary key';

ALTER TABLE item ADD CONSTRAINT item_pk PRIMARY KEY ( item_code );

CREATE TABLE moving_record (
    moving_time       TIMESTAMP(0) NOT NULL,
    room_number       INTEGER,
    houseshare_code   VARCHAR2(12 BYTE) NOT NULL,
    book_time         TIMESTAMP(0) NOT NULL,
    customer_id       VARCHAR2(6 CHAR) NOT NULL
);

COMMENT ON COLUMN moving_record.moving_time IS
    'Moving time as primary key';

COMMENT ON COLUMN moving_record.room_number IS
    'Room number of the customer';

COMMENT ON COLUMN moving_record.houseshare_code IS
    'Unique code of houseshare';

COMMENT ON COLUMN moving_record.book_time IS
    'Customers booking time, serves as primary key';

COMMENT ON COLUMN moving_record.customer_id IS
    'Customer unique id, as the primary key';

ALTER TABLE moving_record ADD CONSTRAINT moving_record_pk PRIMARY KEY ( moving_time
,
                                                                        customer_id
                                                                        );

CREATE TABLE performance (
    tour_guide_id   VARCHAR2(12 BYTE) NOT NULL,
    activity_code   VARCHAR2(12 BYTE) NOT NULL,
    perform_time    TIMESTAMP(0) NOT NULL
);

COMMENT ON COLUMN performance.tour_guide_id IS
    'unique id of tour guide';

COMMENT ON COLUMN performance.activity_code IS
    'Activity code as primary key';

COMMENT ON COLUMN performance.perform_time IS
    'Time the tour guide finishes the activity';

ALTER TABLE performance ADD CONSTRAINT performance_pk PRIMARY KEY ( tour_guide_id
,
                                                                    perform_time )
                                                                    ;

CREATE TABLE police_check (
    check_cer   VARCHAR2(30 BYTE),
    keeper_id   VARCHAR2(12 BYTE) NOT NULL
);

COMMENT ON COLUMN police_check.check_cer IS
    'Housekeeper police check certificate (if available)';

COMMENT ON COLUMN police_check.keeper_id IS
    'Unique id of the house keepeer';

ALTER TABLE police_check ADD CONSTRAINT police_check_pk PRIMARY KEY ( keeper_id )
;

CREATE TABLE prescription (
    prescribe_time   TIMESTAMP(0) NOT NULL,
    book_time        TIMESTAMP(0) NOT NULL,
    customer_id      VARCHAR2(6 CHAR) NOT NULL,
    tour_guide_id    VARCHAR2(12 BYTE) NOT NULL,
    activity_code    VARCHAR2(12 BYTE) NOT NULL
);

COMMENT ON COLUMN prescription.prescribe_time IS
    'The time that tour guide prescribe an activity to a customer';

COMMENT ON COLUMN prescription.book_time IS
    'Customers booking time, serves as primary key';

COMMENT ON COLUMN prescription.customer_id IS
    'Customer unique id, as the primary key';

COMMENT ON COLUMN prescription.tour_guide_id IS
    'unique id of tour guide';

COMMENT ON COLUMN prescription.activity_code IS
    'Activity code as primary key';

ALTER TABLE prescription
    ADD CONSTRAINT prescription_pk PRIMARY KEY ( customer_id,
                                                 activity_code,
                                                 prescribe_time );

CREATE TABLE room (
    room_number       INTEGER NOT NULL,
    room_type         CHAR(1 CHAR) NOT NULL,
    houseshare_code   VARCHAR2(12 BYTE) NOT NULL
);

ALTER TABLE room ADD CONSTRAINT chk_room_number CHECK ( room_number >= 0 );

COMMENT ON COLUMN room.room_number IS
    'Room number as primary key';

COMMENT ON COLUMN room.room_type IS
    'Room type: O for open-plan, F for fixed';

COMMENT ON COLUMN room.houseshare_code IS
    'Unique code of houseshare';

ALTER TABLE room ADD CONSTRAINT room_pk PRIMARY KEY ( room_number,
                                                      houseshare_code );

CREATE TABLE room_phone_number (
    room_phone        NUMBER(11),
    room_number       INTEGER NOT NULL,
    houseshare_code   VARCHAR2(12 BYTE) NOT NULL
);

COMMENT ON COLUMN room_phone_number.room_phone IS
    'Rooms phone number';

COMMENT ON COLUMN room_phone_number.room_number IS
    'Room number as primary key';

COMMENT ON COLUMN room_phone_number.houseshare_code IS
    'Unique code of houseshare';

ALTER TABLE room_phone_number ADD CONSTRAINT room_phone_number_pk PRIMARY KEY ( room_number
,
                                                                                houseshare_code
                                                                                )
                                                                                ;

CREATE TABLE specialisation (
    special_code     VARCHAR2(12 BYTE) NOT NULL,
    specialisation   VARCHAR2(50 BYTE)
);

COMMENT ON COLUMN specialisation.special_code IS
    'Special code for each specialisation. For example, Special_code for foodie tour is FT'
    ;

COMMENT ON COLUMN specialisation.specialisation IS
    'Short description of specialisation';

ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( special_code
);

CREATE TABLE tour_guide (
    tour_guide_id          VARCHAR2(12 BYTE) NOT NULL,
    tour_guide_fname       VARCHAR2(30 BYTE) NOT NULL,
    tour_guide_lname       VARCHAR2(30 BYTE) NOT NULL,
    tour_guide_phone       NUMBER(11),
    tour_guide_instagram   VARCHAR2(50 BYTE)
);

COMMENT ON COLUMN tour_guide.tour_guide_id IS
    'unique id of tour guide';

COMMENT ON COLUMN tour_guide.tour_guide_fname IS
    'tour guide first name';

COMMENT ON COLUMN tour_guide.tour_guide_lname IS
    'tour guide last name';

COMMENT ON COLUMN tour_guide.tour_guide_phone IS
    'tour guide phone';

COMMENT ON COLUMN tour_guide.tour_guide_instagram IS
    'tour guide instagram handle';

ALTER TABLE tour_guide ADD CONSTRAINT tour_guide_pk PRIMARY KEY ( tour_guide_id )
;

CREATE TABLE tour_guide_special (
    special_code    VARCHAR2(12 BYTE) NOT NULL,
    tour_guide_id   VARCHAR2(12 BYTE) NOT NULL
);

COMMENT ON COLUMN tour_guide_special.special_code IS
    'Special code for each specialisation. For example, Special_code for foodie tour is FT'
    ;

COMMENT ON COLUMN tour_guide_special.tour_guide_id IS
    'unique id of tour guide';

ALTER TABLE tour_guide_special ADD CONSTRAINT tour_guide_special_pk PRIMARY KEY (
special_code,
                                                                                  tour_guide_id
                                                                                  )
                                                                                  ;

ALTER TABLE activity_special
    ADD CONSTRAINT activity_activity_special FOREIGN KEY ( activity_code )
        REFERENCES activity ( activity_code );

ALTER TABLE charge
    ADD CONSTRAINT activity_charge FOREIGN KEY ( activity_code )
        REFERENCES activity ( activity_code );

ALTER TABLE performance
    ADD CONSTRAINT activity_performance FOREIGN KEY ( activity_code )
        REFERENCES activity ( activity_code );

ALTER TABLE prescription
    ADD CONSTRAINT activity_prescription FOREIGN KEY ( activity_code )
        REFERENCES activity ( activity_code );

ALTER TABLE moving_record
    ADD CONSTRAINT booking_moving_record FOREIGN KEY ( book_time,
                                                       customer_id )
        REFERENCES booking ( book_time,
                             customer_id );

ALTER TABLE prescription
    ADD CONSTRAINT booking_prescription FOREIGN KEY ( book_time,
                                                      customer_id )
        REFERENCES booking ( book_time,
                             customer_id );

ALTER TABLE item
    ADD CONSTRAINT cost_centre_item FOREIGN KEY ( centre_code )
        REFERENCES cost_centre ( centre_code );

ALTER TABLE charge
    ADD CONSTRAINT customer_activity_charge FOREIGN KEY ( customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE booking
    ADD CONSTRAINT customer_booking FOREIGN KEY ( customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE housekeeper_assignment
    ADD CONSTRAINT housekeeper_assignment FOREIGN KEY ( keeper_id )
        REFERENCES housekeeper ( keeper_id );

ALTER TABLE police_check
    ADD CONSTRAINT housekeeper_police_check FOREIGN KEY ( keeper_id )
        REFERENCES housekeeper ( keeper_id );

ALTER TABLE housekeeper_assignment
    ADD CONSTRAINT houseshare_assignment FOREIGN KEY ( houseshare_code )
        REFERENCES houseshare ( houseshare_code );

ALTER TABLE moving_record
    ADD CONSTRAINT houseshare_moving_record FOREIGN KEY ( houseshare_code )
        REFERENCES houseshare ( houseshare_code );

ALTER TABLE room
    ADD CONSTRAINT houseshare_room FOREIGN KEY ( houseshare_code )
        REFERENCES houseshare ( houseshare_code );

ALTER TABLE activity_special
    ADD CONSTRAINT item_activity_special FOREIGN KEY ( item_code )
        REFERENCES item ( item_code );

ALTER TABLE charge
    ADD CONSTRAINT item_charge FOREIGN KEY ( item_code )
        REFERENCES item ( item_code );

ALTER TABLE room_phone_number
    ADD CONSTRAINT room_room_phone FOREIGN KEY ( room_number,
                                                 houseshare_code )
        REFERENCES room ( room_number,
                          houseshare_code );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE tour_guide_special
    ADD CONSTRAINT specialisation_tourguide_special FOREIGN KEY ( special_code )
        REFERENCES specialisation ( special_code );

ALTER TABLE booking
    ADD CONSTRAINT tour_guide_booking FOREIGN KEY ( tour_guide_id )
        REFERENCES tour_guide ( tour_guide_id );

ALTER TABLE performance
    ADD CONSTRAINT tour_guide_performance FOREIGN KEY ( tour_guide_id )
        REFERENCES tour_guide ( tour_guide_id );

ALTER TABLE prescription
    ADD CONSTRAINT tour_guide_prescription FOREIGN KEY ( tour_guide_id )
        REFERENCES tour_guide ( tour_guide_id );

ALTER TABLE tour_guide_special
    ADD CONSTRAINT tourguide_tourguide_special FOREIGN KEY ( tour_guide_id )
        REFERENCES tour_guide ( tour_guide_id );

spool off

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             0
-- ALTER TABLE                             48
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
